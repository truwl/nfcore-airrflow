parameter_meta:
  airrflow.samplesheet:
    description: Path to a tsv file providing paths to the fastq files for each sample
      and the necessary metadata for the analysis.
    group: input_output_options
    help: 'The input file includes important sample metadata and the path to the R1
      and R2 fastq files, and index read file (I), if available. The file should include
      the following columns, separated with tabs, with exactly these header names:


      ```bash

      ID Source Treatment Extraction_time Population R1 R2 I1

      QMKMK072AD Patient_2 Drug_treatment baseline p sample_S8_L001_R1_001.fastq.gz
      sample_S8_L001_R2_001.fastq.gz sample_S8_L001_I1_001.fastq.gz

      ```


      This metadata will then be automatically annotated in a column with the same
      header in the tables outputed by the pipeline. Where:


      * ID: sample ID.

      * Source: patient or organism code.

      * Treatment: treatment condition applied to the sample.

      * Extraction_time: time of cell extraction for the sample.

      * Population: B-cell population (e.g. naive, double-negative, memory, plasmablast).

      * R1: path to fastq file with first mates of paired-end sequencing.

      * R2: path to fastq file with second mates of paired-end sequencing.

      * I1: path to fastq with illumina index and UMI (unique molecular identifier)
      barcode (optional column)


      Specify the path for your input file like this:


      ```bash

      --input ''path/to/metadata/metadata_sheet.tsv''

      ```'
    hidden: false
  airrflow.cprimers:
    description: Path to a fasta file containing the C-region primer sequences.
    group: input_output_options
    help: ''
    hidden: false
  airrflow.vprimers:
    description: Path to a fasta file containinc the V-region primer sequences.
    group: input_output_options
    help: ''
    hidden: false
  airrflow.outdir:
    description: Path to the output directory where the results will be saved.
    group: input_output_options
    help: ''
    hidden: false
  airrflow.email:
    description: Email address for completion summary.
    group: input_output_options
    help: Set this parameter to your e-mail address to get a summary e-mail with details
      of the run sent to you when the workflow exits. If set in your user config file
      (`~/.nextflow/config`) then you don't need to specify this on the command line
      for every run.
    hidden: false
  airrflow.multiqc_title:
    description: MultiQC report title. Printed as page header, used for filename if
      not otherwise specified.
    group: input_output_options
    help: ''
    hidden: false
  airrflow.igblast_base:
    description: Path to the cached igblast database.
    group: databases_cache
    help: If it is not provided, the database will be newly downloaded.
    hidden: false
  airrflow.imgtdb_base:
    description: Path to the cached igblast database.
    group: databases_cache
    help: If it is not provided, the database will be newly downloaded.
    hidden: false
  airrflow.save_databases:
    description: Save databases so you can use the cache in future runs.
    group: databases_cache
    help: ''
    hidden: false
  airrflow.species:
    description: 'Species to perform Igblast. Choose from: human, mouse.'
    group: databases_cache
    help: ''
    hidden: false
  airrflow.loci:
    description: 'Loci to perform Igblast. Choose from: ig (BCR / Immunoglobulins),
      tr (TCR).'
    group: databases_cache
    help: ''
    hidden: false
  airrflow.protocol:
    description: Protocol used for the V(D)J amplicon sequencing.
    group: primer_handling
    help: 'Available protocols are:

      - `pcr_umi`: (default). PCR amplification with UMI barcodes. Please also provide
      the C-primer (`--cprimers`) and V-primer (`--vprimers`) sequences, specify the
      UMI barcode length (`--umi_length`) and position (`--umi_position`), the V-primer
      start (`--vprimer_start`), and C-primer start (`--cprimer_start`) and position
      (`--cprimer_position`).

      - `race_5p_umi`: 5''-RACE amplification with UMI barcodes. Please also provide
      the C-primer (`--cprimers`) and linker or template switch oligo sequences (`--race_linker`),
      specify the UMI barcode length (`--umi_length`) and position (`--umi_position`),
      the C-primer start (`--cprimer_start`) and position (`--cprimer_position`).'
    hidden: false
  airrflow.vprimer_start:
    description: Start position of V region primers (without counting the UMI barcode).
    group: primer_handling
    help: ''
    hidden: false
  airrflow.cprimer_start:
    description: Start position of C region primers (without counting the UMI barcode).
    group: primer_handling
    help: ''
    hidden: false
  airrflow.race_linker:
    description: Path to fasta file containing the linker sequence, if no V-region
      primers were used but a linker sequence is present (e.g. 5' RACE SMARTer TAKARA
      protocol).
    group: primer_handling
    help: ''
    hidden: false
  airrflow.cprimer_position:
    description: Indicate if C region primers are in the R1 or R2 reads.
    group: primer_handling
    help: ''
    hidden: false
  airrflow.index_file:
    description: Indicate if UMI indices are recorded in a separate index file.
    group: umi_barcode_handling
    help: 'Set to `true` if UMI barcodes are to be read from a separate illumina index
      fastq file. If Illumina indices and UMI barcodes are already integrated into
      the R1 reads, leave the default `--index_file false`.


      The pipeline requires UMI barcodes for identifying unique transcripts. These
      barcodes are typically read from an index file but sometimes can be provided
      merged with the start of the R1 or R2 reads. If provided in an additional index
      file, set the `--index_file` parameter, if provided merged with the R1 or R2
      reads, set the `--umi_position` parameter.'
    hidden: false
  airrflow.umi_position:
    description: Indicate if UMI indices are recorded in the R1 (default) or R1 fastq
      file.
    group: umi_barcode_handling
    help: The pipeline requires UMI barcodes for identifying unique transcripts. These
      barcodes are typically read from an index file but sometimes can be provided
      merged with the start of the R1 or R2 reads. If provided in an additional index
      file, set the `--index_file` parameter, if provided merged with the R1 or R2
      reads, set the `--umi_position` parameter to R1 or R2, respectively.
    hidden: false
  airrflow.umi_length:
    description: UMI barcode length in nucleotides.
    group: umi_barcode_handling
    help: ''
    hidden: false
  airrflow.umi_start:
    description: UMI barcode start position.
    group: umi_barcode_handling
    help: ''
    hidden: false
  airrflow.filterseq_q:
    description: Quality threshold for Presto FilterSeq sequence filtering.
    group: presto_options
    help: ''
    hidden: false
  airrflow.primer_mask_mode:
    description: 'Masking mode for the Presto MaskPrimer process. Available: cut,
      mask, trim, tag.'
    group: presto_options
    help: 'The primer masking modes will perform the following actions:


      * `cut`: remove both the primer region and the preceding sequence.

      * `mask`: replace the primer region with Ns and remove the preceding sequence.

      * `trim`: remove the region preceding the primer, but leave the primer region
      intact.

      * `tag`: leave the input sequence unmodified.'
    hidden: false
  airrflow.primer_maxerror:
    description: Maximum scoring error for the Presto MaxPrimer process for the C
      and/or V region primers identification.
    group: presto_options
    help: ''
    hidden: false
  airrflow.primer_consensus:
    description: Maximum error for building the primer consensus.
    group: presto_options
    help: ''
    hidden: false
  airrflow.set_cluster_threshold:
    description: Set to true if to manually adjust the clustering threshold for cell
      clones.
    group: clustering_threshold_definition
    help: 'Set the `--set_cluster_threshold` parameter to allow manual cluster hamming
      distance threshold definition. Then specify the value in the `--cluster_threshold`
      parameter.


      By default, the pipeline will define clones for each of the samples, as two
      sequences having the same V gene assignment, C gene assignment, J-gene assignment,
      and junction length. Additionally, the similarity of the junction region sequences
      will be assessed by hamming distances. A distance threshold for determining
      if two sequences come from the same clone is automatically determined by the
      process shazam. Alternatively, a hamming distance threshold can be manually
      set by setting the `--set_cluster_threshold` and `--cluster_threshold` parameters.'
    hidden: false
  airrflow.cluster_threshold:
    description: Set the clustering threshold Hamming distance value.
    group: clustering_threshold_definition
    help: 'To have any effect, the  `--set_cluster_threshold` parameter needs to be
      set to `true`.


      By default, the pipeline will define clones for each of the samples, as two
      sequences having the same V gene assignment, C gene assignment, J-gene assignment,
      and junction length. Additionally, the similarity of the junction region sequences
      will be assessed by hamming distances. A distance threshold for determining
      if two sequences come from the same clone is automatically determined by the
      process shazam. Alternatively, a hamming distance threshold can be manually
      set by setting the `--set_cluster_threshold` and `--cluster_threshold` parameters.'
    hidden: false
  airrflow.threshold_method:
    description: Set the method for finding the clustering threshold.
    group: clustering_threshold_definition
    help: This method will be used to find the Hamming nearest neighbor distances
      threshold for determining if a sequence belongs to the same B/T-cell clone or
      not. Available methods are "gmm" for a maximum-likelihood Gamma or Gaussian
      mixture fitting, and "density" for fitting a binned approximation to the ordinary
      kernel density estimate to the nearest neighbor distances.
    hidden: false
  airrflow.skip_report:
    description: Skip repertoire analysis and report generation.
    group: downstream_options
    help: ''
    hidden: false
  airrflow.skip_lineage:
    description: Skip clonal lineage analysis and lineage tree plotting.
    group: downstream_options
    help: ''
    hidden: false
  airrflow.skip_multiqc:
    description: Skip multiqc report generation.
    group: downstream_options
    help: ''
    hidden: false
  airrflow.igenomes_base:
    description: Directory / URL base for iGenomes references.
    group: reference_genome_options
    help: ''
    hidden: true
  airrflow.igenomes_ignore:
    description: Do not load the iGenomes reference config.
    group: reference_genome_options
    help: Do not load `igenomes.config` when running the pipeline. You may choose
      this option if you observe clashes between custom parameters and those supplied
      in `igenomes.config`.
    hidden: true
  airrflow.custom_config_version:
    description: Git commit id for Institutional configs.
    group: institutional_config_options
    help: ''
    hidden: true
  airrflow.custom_config_base:
    description: Base directory for Institutional configs.
    group: institutional_config_options
    help: If you're running offline, Nextflow will not be able to fetch the institutional
      config files from the internet. If you don't need them, then this is not a problem.
      If you do need them, you should download the files from the repo and tell Nextflow
      where to find them with this parameter.
    hidden: true
  airrflow.hostnames:
    description: Institutional configs hostname.
    group: institutional_config_options
    help: ''
    hidden: true
  airrflow.config_profile_name:
    description: Institutional config name.
    group: institutional_config_options
    help: ''
    hidden: true
  airrflow.config_profile_description:
    description: Institutional config description.
    group: institutional_config_options
    help: ''
    hidden: true
  airrflow.config_profile_contact:
    description: Institutional config contact information.
    group: institutional_config_options
    help: ''
    hidden: true
  airrflow.config_profile_url:
    description: Directory to keep pipeline Nextflow logs and reports.
    group: institutional_config_options
    help: ''
    hidden: true
  airrflow.max_cpus:
    description: Maximum number of CPUs that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the CPU requirement for each process. Should
      be an integer e.g. `--max_cpus 1`
    hidden: true
  airrflow.max_memory:
    description: Maximum amount of memory that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the memory requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_memory '8.GB'`
    hidden: true
  airrflow.max_time:
    description: Maximum amount of time that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the time requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_time '2.h'`
    hidden: true
  airrflow.help:
    description: Display help text.
    group: generic_options
    help: ''
    hidden: true
  airrflow.publish_dir_mode:
    description: Method used to save pipeline results to output directory.
    group: generic_options
    help: The Nextflow `publishDir` option specifies which intermediate files should
      be saved to the output directory. This option tells the pipeline what method
      should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir)
      for details.
    hidden: true
  airrflow.email_on_fail:
    description: Email address for completion summary, only when pipeline fails.
    group: generic_options
    help: An email address to send a summary email to when the pipeline is completed
      - ONLY sent if the pipeline does not exit successfully.
    hidden: true
  airrflow.plaintext_email:
    description: Send plain-text email instead of HTML.
    group: generic_options
    help: ''
    hidden: true
  airrflow.max_multiqc_email_size:
    description: File size limit when attaching MultiQC reports to summary emails.
    group: generic_options
    help: ''
    hidden: true
  airrflow.monochrome_logs:
    description: Do not use coloured log outputs.
    group: generic_options
    help: ''
    hidden: true
  airrflow.multiqc_config:
    description: Custom config file to supply to MultiQC.
    group: generic_options
    help: ''
    hidden: true
  airrflow.tracedir:
    description: Directory to keep pipeline Nextflow logs and reports.
    group: generic_options
    help: ''
    hidden: true
  airrflow.validate_params:
    description: Boolean whether to validate parameters against the schema at runtime
    group: generic_options
    help: ''
    hidden: true
  airrflow.show_hidden_params:
    description: Show all params when using `--help`
    group: generic_options
    help: By default, parameters set as _hidden_ in the schema are not shown on the
      command line when a user runs with `--help`. Specifying this option will tell
      the pipeline to show all parameters.
    hidden: true
  airrflow.enable_conda:
    description: Run this workflow with Conda. You can also use '-profile conda' instead
      of providing this parameter.
    group: generic_options
    help: ''
    hidden: true
  airrflow.singularity_pull_docker_container:
    description: Instead of directly downloading Singularity images for use with Singularity,
      force the workflow to pull and convert Docker containers instead.
    group: generic_options
    help: This may be useful for example if you are unable to directly pull Singularity
      containers to run the pipeline due to http/https proxy issues.
    hidden: true
parameter_group:
  input_output_options:
    description: Define where the pipeline should find input data and save output
      data.
    help: null
    title: Input/output options
  databases_cache:
    description: Define the paths to the igblast and IMGT databases if you have them
      cached.
    help: ''
    title: Databases cache
  primer_handling:
    description: Define the primer region start and how to deal with the primer alignment.
    help: null
    title: Primer handling
  umi_barcode_handling:
    description: Define how UMI barcodes should be treated.
    help: 'The pipeline requires UMI barcodes for identifying unique

      transcripts. These barcodes are typically read from an index file but sometimes
      can be provided merged with the start of the R1 or R2 reads. If provided in
      an additional index file, set the `--index_file` parameter, if provided merged
      with the R1 or R2 reads, set the `--umi_position` parameter. Specify the UMI
      barcode length with the `--umi_length` parameter.'
    title: UMI barcode handling
  presto_options:
    description: Options for the presto tools
    help: null
    title: Presto options
  clustering_threshold_definition:
    description: Define how the B-cell clonal trees should be calculated.
    help: "By default, the pipeline will define clones for each of the samples, as\
      \ two sequences having the same V gene assignment, C gene assignment, J-gene\
      \ assignment, and junction length. Additionally, the similarity of the CDR3\
      \ sequences will be assessed by Hamming distances. \n\nA distance threshold\
      \ for determining if two sequences come from the same clone or not is automatically\
      \ determined by the process shazam. Alternatively, a hamming distance threshold\
      \ can be  manually set   by setting the `--set_cluster_threshold` and `--cluster_threshold`\
      \ parameters."
    title: Clustering threshold definition
  downstream_options:
    description: Define downstream analysis options.
    help: 'Downstream analyses include a series of R scripts based on the Immcantation
      Alakazam, ChangeO and Shazam packages to calculate:

      - Clonal abundance and diversity

      - Clonal lineage tree export in graphML

      - Clonal overlap and statistics

      - Mutational load

      - Isotype and V-family distribution'
    title: Downstream options
  reference_genome_options:
    description: Options for the reference genome indices used to align reads.
    help: null
    title: Reference genome options
  institutional_config_options:
    description: Parameters used to describe centralised config profiles. These should
      not be edited.
    help: The centralised nf-core configuration profiles use a handful of pipeline
      parameters to describe themselves. This information is then printed to the Nextflow
      log when you run a pipeline. You should not need to change these values when
      you run a pipeline.
    title: Institutional config options
  max_job_request_options:
    description: Set the top limit for requested resources for any single job.
    help: 'If you are running on a smaller system, a pipeline step requesting more
      resources than are available may cause the Nextflow to stop the run with an
      error. These options allow you to cap the maximum resources requested by any
      single job so that the pipeline will run on your system.


      Note that you can not _increase_ the resources requested by any job using these
      options. For that you will need your own configuration file. See [the nf-core
      website](https://nf-co.re/usage/configuration) for details.'
    title: Max job request options
  generic_options:
    description: Less common options for the pipeline, typically set in a config file.
    help: 'These options are common to all nf-core pipelines and allow you to customise
      some of the core preferences for how the pipeline runs.


      Typically these options would be set in a Nextflow config file loaded for all
      pipeline runs, such as `~/.nextflow/config`.'
    title: Generic options
